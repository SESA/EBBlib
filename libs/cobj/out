# 1 "cobjtest.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "cobjtest.c"
# 1 "../types.h" 1
# 33 "../types.h"
typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;
typedef unsigned long long u64;
typedef unsigned long uval;
typedef char s8;
typedef short s16;
typedef int s32;
typedef long long s64;
typedef long sval;
# 52 "../types.h"
typedef uval EL;
typedef uval ELNum;
# 2 "cobjtest.c" 2
# 1 "cobj.h" 1
# 3 "cobjtest.c" 2

struct CObj_if {
  const char *(*name) (void *_data);
  uval (*init) (void *_data);
};

struct Counter_if {
  void (*inc) (void *_data);
  void (*dec) (void *_data);
  uval (*val) (void *_data);
};

struct File_if {
  uval (*open) (void *_data, char *name, uval mode);
  uval (*close) (void *_data);
  uval (*read) (void *_data, char *buf, uval len);
  uval (*write) (void *_data, char *buf, uval len);
};


typedef struct MyObj_obj MyObj; typedef MyObj * MyObjRef; struct MyObj_obj { {

  struct MyObj_if {
    struct CObj_if CObj_if;
    struct Counter_if Counter_if;
    struct File_if File_if;
    uval (*Init) (void *_data, uval v);
  } * _vtable;

  uval val;
  uval fd;
  uval offset;

};

struct MyObj_if MyObj_vtable = {
  MyObj_CObj_name, MyObj_CObj_init,
  MyObj_Counter_inc, MyObj_Counter_dec, MyObj_Counter_val,
  MyObj_File_open, MyObj_File_close, MyObj_File_read, MyObj_File_write,
  MyObj_Init
};


int
main(int argc, char **argv)
{
  MyObj o = &MyObj_vtable;
  MyObjRef ref;

  (ref->_vtable->Init(ref, 10));
  (ref->_vtable->CObj_if.init(ref));
  (ref->_vtable->Counter_if.inc(ref));
  (ref->_vtable->File_if.open(ref, "testFile", 0));

  return 0;
}
